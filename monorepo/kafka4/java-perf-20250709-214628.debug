Starting Java Latency Consumer...
Consumer: java-latency-consumer
Writing latency logs to stdout in JSONL format
---
[main] INFO org.apache.kafka.common.config.AbstractConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [kafka4:29092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-java-latency-consumer-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = java-latency-consumer-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.rebootstrap.trigger.ms = 300000
	metadata.recovery.strategy = rebootstrap
	metric.reporters = [org.apache.kafka.common.metrics.JmxReporter]
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[main] INFO org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector - initializing Kafka metrics collector
[main] INFO org.apache.kafka.common.utils.AppInfoParser - Kafka version: 4.0.0
[main] INFO org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: 985bc99521dd22bb
[main] INFO org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1752097588749
[main] INFO org.apache.kafka.clients.consumer.internals.ClassicKafkaConsumer - [Consumer clientId=consumer-java-latency-consumer-group-1, groupId=java-latency-consumer-group] Subscribed to topic(s): test-java-latency-735b580b-1618-47f1-b2d7-16ad6b16dae0
[main] INFO org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-java-latency-consumer-group-1, groupId=java-latency-consumer-group] Cluster ID: MkU3OEVBNTcwNTJENDM2Qk
[main] INFO org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-java-latency-consumer-group-1, groupId=java-latency-consumer-group] Discovered group coordinator kafka4:29092 (id: 2147483646 rack: null isFenced: false)
[main] INFO org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-java-latency-consumer-group-1, groupId=java-latency-consumer-group] (Re-)joining group
[main] INFO org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-java-latency-consumer-group-1, groupId=java-latency-consumer-group] Request joining group due to: need to re-join with the given member-id: consumer-java-latency-consumer-group-1-7d0e9ab2-2e63-4e4d-9cfd-2b52ab9e4865
[main] INFO org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-java-latency-consumer-group-1, groupId=java-latency-consumer-group] (Re-)joining group
[main] INFO org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-java-latency-consumer-group-1, groupId=java-latency-consumer-group] Successfully joined group with generation Generation{generationId=3, memberId='consumer-java-latency-consumer-group-1-7d0e9ab2-2e63-4e4d-9cfd-2b52ab9e4865', protocol='range'}
[main] INFO org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-java-latency-consumer-group-1, groupId=java-latency-consumer-group] Finished assignment for group at generation 3: {consumer-java-latency-consumer-group-1-7d0e9ab2-2e63-4e4d-9cfd-2b52ab9e4865=Assignment(partitions=[test-java-latency-735b580b-1618-47f1-b2d7-16ad6b16dae0-0, test-java-latency-735b580b-1618-47f1-b2d7-16ad6b16dae0-1, test-java-latency-735b580b-1618-47f1-b2d7-16ad6b16dae0-2])}
[main] INFO org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-java-latency-consumer-group-1, groupId=java-latency-consumer-group] Successfully synced group in generation Generation{generationId=3, memberId='consumer-java-latency-consumer-group-1-7d0e9ab2-2e63-4e4d-9cfd-2b52ab9e4865', protocol='range'}
[main] INFO org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-java-latency-consumer-group-1, groupId=java-latency-consumer-group] Notifying assignor about the new Assignment(partitions=[test-java-latency-735b580b-1618-47f1-b2d7-16ad6b16dae0-0, test-java-latency-735b580b-1618-47f1-b2d7-16ad6b16dae0-1, test-java-latency-735b580b-1618-47f1-b2d7-16ad6b16dae0-2])
[main] INFO org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-java-latency-consumer-group-1, groupId=java-latency-consumer-group] Adding newly assigned partitions: test-java-latency-735b580b-1618-47f1-b2d7-16ad6b16dae0-0, test-java-latency-735b580b-1618-47f1-b2d7-16ad6b16dae0-1, test-java-latency-735b580b-1618-47f1-b2d7-16ad6b16dae0-2
[main] INFO org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-java-latency-consumer-group-1, groupId=java-latency-consumer-group] Found no committed offset for partition test-java-latency-735b580b-1618-47f1-b2d7-16ad6b16dae0-0
[main] INFO org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-java-latency-consumer-group-1, groupId=java-latency-consumer-group] Found no committed offset for partition test-java-latency-735b580b-1618-47f1-b2d7-16ad6b16dae0-2
[main] INFO org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-java-latency-consumer-group-1, groupId=java-latency-consumer-group] Found no committed offset for partition test-java-latency-735b580b-1618-47f1-b2d7-16ad6b16dae0-1
[main] INFO org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer clientId=consumer-java-latency-consumer-group-1, groupId=java-latency-consumer-group] Resetting offset for partition test-java-latency-735b580b-1618-47f1-b2d7-16ad6b16dae0-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka4:29092 (id: 1 rack: null isFenced: false)], epoch=0}}.
[main] INFO org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer clientId=consumer-java-latency-consumer-group-1, groupId=java-latency-consumer-group] Resetting offset for partition test-java-latency-735b580b-1618-47f1-b2d7-16ad6b16dae0-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka4:29092 (id: 1 rack: null isFenced: false)], epoch=0}}.
[main] INFO org.apache.kafka.clients.consumer.internals.SubscriptionState - [Consumer clientId=consumer-java-latency-consumer-group-1, groupId=java-latency-consumer-group] Resetting offset for partition test-java-latency-735b580b-1618-47f1-b2d7-16ad6b16dae0-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka4:29092 (id: 1 rack: null isFenced: false)], epoch=0}}.
Processed: java-msg-1, Latency: 176.839 ms
Processed: java-msg-2, Latency: 8.531 ms
Processed: java-msg-3, Latency: 6.741 ms
Processed: java-msg-4, Latency: 7.160 ms
Processed: java-msg-5, Latency: 7.682 ms
Processed: java-msg-6, Latency: 6.306 ms
Processed: java-msg-7, Latency: 8.051 ms
Processed: java-msg-8, Latency: 6.419 ms
Processed: java-msg-9, Latency: 7.199 ms
Processed: java-msg-10, Latency: 7.072 ms

