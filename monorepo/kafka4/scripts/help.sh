#!/bin/bash

# Show all available helper scripts
echo "üöÄ Kafka + Go Development Helper Scripts"
echo "==========================================="
echo ""
echo "Environment Management:"
echo "  ./scripts/start.sh           - Start Kafka and Go containers"
echo "  ./scripts/stop.sh            - Stop containers"
echo "  ./scripts/test-connection.sh - Test Kafka connection"
echo ""
echo "Development:"
echo "  ./scripts/shell.sh           - Access Go development container"
echo "  ./scripts/producer.sh        - Run Go producer"
echo "  ./scripts/consumer.sh        - Run Go consumer"
echo ""
echo "Kafka Management:"
echo "  ./scripts/kafka-topics.sh    - Manage Kafka topics"
echo "    Examples:"
echo "      ./scripts/kafka-topics.sh list"
echo "      ./scripts/kafka-topics.sh create my-topic"
echo "      ./scripts/kafka-topics.sh describe my-topic"
echo "      ./scripts/kafka-topics.sh delete my-topic"
echo ""
echo "Monitoring:"
echo "  ./scripts/logs.sh            - View container logs"
echo "  ./scripts/logs.sh kafka4     - View Kafka logs"
echo "  ./scripts/logs.sh dev-golang - View Go container logs"
echo ""
echo "Direct Docker Commands:"
echo "  docker compose up -d         - Start containers"
echo "  docker compose down          - Stop containers"
echo "  docker compose down -v       - Stop and remove volumes"
echo "  docker compose ps            - Show container status"
echo "  docker compose exec dev-golang sh - Access Go container"
echo ""
echo "üìù Project Structure:"
echo "  /workspace         - Current directory mounted in container"
echo "  /golang-project    - Your Go project (kafka.latency/golang.latency)"
echo "    ‚îú‚îÄ‚îÄ producer/    - Go producer application"
echo "    ‚îú‚îÄ‚îÄ consumer/    - Go consumer application"
echo "    ‚îî‚îÄ‚îÄ loadtest.scripts/"
echo ""
echo "üîó Connection Info:"
echo "  Kafka from host:     localhost:9093"
echo "  Kafka from container: kafka4:29092"
echo "  JMX monitoring:      localhost:9997" 