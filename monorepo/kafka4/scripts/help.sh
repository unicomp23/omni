#!/bin/bash

# Show all available helper scripts
echo "üöÄ Apache Kafka 4.0.0 + Go (franz-go) Development Helper Scripts"
echo "=================================================================="
echo ""
echo "Environment Management:"
echo "  ./scripts/start.sh           - Start Apache Kafka 4.0.0 and Go containers"
echo "  ./scripts/stop.sh            - Stop containers"
echo "  ./scripts/test-connection.sh - Test Kafka connection"
echo ""
echo "Go Development:"
echo "  ./scripts/shell.sh           - Access Go development container"
echo "  ./scripts/producer.sh        - Run Go producer"
echo "  ./scripts/consumer.sh        - Run Go consumer"
echo ""
echo "Performance Testing:"
echo "  ./scripts/run-coordinated-test.sh - Run coordinated producer-consumer tests"
echo "  ./calculate-percentiles.sh    - Calculate latency percentiles"
echo "  ./analyze-latency-logs.sh     - Analyze latency logs"
echo ""
echo "Kafka Management:"
echo "  ./scripts/kafka-topics.sh    - Manage Kafka topics"
echo "    Examples:"
echo "      ./scripts/kafka-topics.sh list"
echo "      ./scripts/kafka-topics.sh create my-topic"
echo "      ./scripts/kafka-topics.sh describe my-topic"
echo "      ./scripts/kafka-topics.sh delete my-topic"
echo ""
echo "  ./scripts/topic-manager.sh   - Manage topics with UUID generation"
echo "    Examples:"
echo "      ./scripts/topic-manager.sh fresh  - Clean and create new topics"
echo "      ./scripts/topic-manager.sh list   - List all topics"
echo "      ./scripts/topic-manager.sh cleanup- Clean up old topics"
echo ""
echo "Monitoring:"
echo "  ./scripts/logs.sh            - View container logs"
echo "  ./scripts/logs.sh kafka4     - View Kafka logs"
echo "  ./scripts/logs.sh dev-golang - View Go container logs"
echo ""
echo "Direct Docker Commands:"
echo "  docker compose up -d         - Start containers"
echo "  docker compose down          - Stop containers"
echo "  docker compose down -v       - Stop and remove volumes"
echo "  docker compose ps            - Show container status"
echo "  docker compose exec dev-golang sh - Access Go container"
echo ""
echo "üìù Project Structure:"
echo "  /workspace         - Current directory mounted in containers"
echo "  /golang-project    - Go project (mounted from ./golang-project)"
echo "    ‚îú‚îÄ‚îÄ go.mod       - Go module configuration"
echo "    ‚îú‚îÄ‚îÄ producer.go  - Basic producer"
echo "    ‚îú‚îÄ‚îÄ consumer.go  - Basic consumer"
echo "    ‚îú‚îÄ‚îÄ coordinated-producer.go - Time-based producer"
echo "    ‚îú‚îÄ‚îÄ coordinated-consumer.go - Time-based consumer"
echo "    ‚îî‚îÄ‚îÄ latency-*.go - Latency testing components"
echo ""
echo "üîó Connection Info:"
echo "  Kafka from host:     localhost:9093"
echo "  Kafka from container: kafka4:29092"
echo "  JMX monitoring:      localhost:9997"
echo ""
echo "üèÅ Quick Start:"
echo "  1. Start containers: ./scripts/start.sh"
echo "  2. Run coordinated test: ./scripts/run-coordinated-test.sh"
echo "  3. Analyze results: ./calculate-percentiles.sh <latency-file>.jsonl"
echo "  4. Access container: docker compose exec dev-golang sh" 