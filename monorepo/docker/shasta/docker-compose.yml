# Added version specification
version: '3'

services:
  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    networks:
      - mynetwork

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v24.3.1
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:29092
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:29092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --mode dev-container
      - --smp 1
    ports:
      - 9092:9092
      - 29092:29092
      - 18081:18081
      - 18082:18082
    networks:
      - mynetwork

  devenv:
    build:
      context: .
      dockerfile: Dockerfile.ubuntu
    volumes:
      - ${SSH_AUTH_SOCK:-/dev/null}:/ssh-agent
      - /var/run/docker.sock:/var/run/docker.sock
      - /Users/johndavis/tmp:/tmp  # added volume for /tmp
      - /data:/data  # map Lima VM /data to container /data
    environment:
      - SSH_AUTH_SOCK=/ssh-agent
    ports:
      - "2222:22"
    networks:
      - mynetwork

  nats:
    image: nats:latest
    command:
      - "-js"
      - "-m"
      - "8222"
    ports:
      - "4222:4222"  # Client port
      - "8222:8222"  # HTTP management port
      - "6222:6222"  # Cluster port
    environment:
      - JS_MAX_MEMORY_STORE=-1
      - JS_MAX_FILE_STORE=-1
      - JS_DOMAIN=shasta
      - JS_COMPRESS=true
      - NATS_STREAMING_STORE_SYNC=every
      - NATS_STREAMING_STORE_SYNC_INTERVAL=1ms
    volumes:
      - nats-data:/data
    networks:
      - mynetwork

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - devenv
    networks:
      - mynetwork

  kafka:
    image: apache/kafka:4.0.0
    ports:
      - "9095:9095"  # External port (different from redpanda)
      - "9094:9094"  # Internal port
      - "9093:9093"  # Controller port
    environment:
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:9094,EXTERNAL://0.0.0.0:9095,CONTROLLER://0.0.0.0:9093
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9094,EXTERNAL://localhost:9095
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_LOG_RETENTION_HOURS=168
      - KAFKA_LOG_SEGMENT_BYTES=1073741824
      - KAFKA_LOG_DIRS=/var/lib/kafka/data
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9094 --list"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  mynetwork:

volumes:
  nats-data:
  kafka-data: