root@053ee0e05889:~/app/omni# cd src/kafka-redis/
root@053ee0e05889:~/app/omni/src/kafka-redis# ls
_tmp.ts  clipboard.txt  history.user.txt  pubSub.test.ts  pubSub.ts
root@053ee0e05889:~/app/omni/src/kafka-redis# npx jest pubSub.test.ts 
  console.warn
    {"level":"WARN","timestamp":"2023-04-21T18:13:59.589Z","logger":"kafkajs","message":"KafkaJS v2.0.0 switched default partitioner. To retain the same partitioning behavior as in previous versions, create the producer with the option \"createPartitioner: Partitioners.LegacyPartitioner\". See the migration guide at https://kafka.js.org/docs/migration-guide-v2.0.0#producer-new-default-partitioner for details. Silence this warning by setting the environment variable \"KAFKAJS_NO_PARTITIONER_WARNING=1\""}

      53 |         });
      54 |
    > 55 |         this.producer = this.kafka.producer();
         |                                    ^
      56 |         this.consumer = this.kafka.consumer({ groupId: KAFKA_CONSUMER_GROUP_ID });
      57 |         this.redis = new Redis(REDIS_OPTIONS);
      58 |

      at node_modules/kafkajs/src/loggers/console.js:17:22
      at Object.warn (node_modules/kafkajs/src/loggers/index.js:16:3)
      at node_modules/kafkajs/src/index.js:27:12
      at node_modules/kafkajs/src/utils/once.js:7:14
      at Client.producer (node_modules/kafkajs/src/index.js:120:7)
      at new PubSub (src/kafka-redis/pubSub.ts:55:36)
      at Object.<anonymous> (src/kafka-redis/pubSub.test.ts:9:18)

  console.info
    {"level":"INFO","timestamp":"2023-04-21T18:13:59.912Z","logger":"kafkajs","message":"[Consumer] Starting","groupId":"default-group-id"}

      at node_modules/kafkajs/src/loggers/console.js:13:22

  console.info
    {"level":"INFO","timestamp":"2023-04-21T18:14:00.156Z","logger":"kafkajs","message":"[ConsumerGroup] Consumer has joined the group","groupId":"default-group-id","memberId":"default-client-id-4c2c0416-d8f5-4627-9ff2-045a99a3c053","leaderId":"default-client-id-4c2c0416-d8f5-4627-9ff2-045a99a3c053","isLeader":true,"memberAssignment":{"default-topic":[0]},"groupProtocol":"RoundRobinAssigner","duration":236}

      at node_modules/kafkajs/src/loggers/console.js:13:22

  console.log
    Processed message: key=testKey-76380936-493d-4c85-bc6a-a35cda9177b4, value=testMessage

      at Runner.eachMessage (src/kafka-redis/pubSub.ts:132:25)

  console.log
    Processed message: key=testKey2-b7219aeb-e9b1-484f-85a3-4fa38dfbfec8, value=testSnapshotMessage

      at Runner.eachMessage (src/kafka-redis/pubSub.ts:132:25)

  console.log
    Processed message: key=testKey2-b7219aeb-e9b1-484f-85a3-4fa38dfbfec8, value=testDeltaMessage

      at Runner.eachMessage (src/kafka-redis/pubSub.ts:132:25)

  console.log
    Processed message: key=testKey2-b7219aeb-e9b1-484f-85a3-4fa38dfbfec8, value=testDeltaMessage

      at Runner.eachMessage (src/kafka-redis/pubSub.ts:132:25)

  console.log
    Processed message: key=testKey3-91c419da-4c04-4094-a317-484c097bcc3c, value=testMessage

      at Runner.eachMessage (src/kafka-redis/pubSub.ts:132:25)

  console.info
    {"level":"INFO","timestamp":"2023-04-21T18:15:30.318Z","logger":"kafkajs","message":"[Runner] consumer not running, exiting","groupId":"default-group-id","memberId":"default-client-id-4c2c0416-d8f5-4627-9ff2-045a99a3c053"}

      at node_modules/kafkajs/src/loggers/console.js:13:22

  console.info
    {"level":"INFO","timestamp":"2023-04-21T18:15:30.362Z","logger":"kafkajs","message":"[Consumer] Stopped","groupId":"default-group-id"}

      at node_modules/kafkajs/src/loggers/console.js:13:22

 FAIL  ./pubSub.test.ts (102.71 s)
  PubSub
    ✕ publish message to Kafka and receive it in Redis (30003 ms)
    ✕ subscribe to a partition, process the snapshot and all deltas (30000 ms)
    ✕ runWorker processes incoming messages and stores them in Redis (30001 ms)

  ● PubSub › publish message to Kafka and receive it in Redis

    thrown: "Exceeded timeout of 30000 ms for a testfalse.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      15 |     });
      16 |
    > 17 |     test("publish message to Kafka and receive it in Redis", async () => {
         |     ^
      18 |         // arrange
      19 |         const partitionKey = `testKey-${uuidv4()}`;
      20 |         const message = "testMessage";

      at src/kafka-redis/pubSub.test.ts:17:5
      at Object.<anonymous> (src/kafka-redis/pubSub.test.ts:4:1)

  ● PubSub › subscribe to a partition, process the snapshot and all deltas

    thrown: "Exceeded timeout of 30000 ms for a testfalse.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      28 |     });
      29 |
    > 30 |     test("subscribe to a partition, process the snapshot and all deltas", async () => {
         |     ^
      31 |         // arrange
      32 |         const partitionKey = `testKey2-${uuidv4()}`;
      33 |         const snapshotMessage = "testSnapshotMessage";

      at src/kafka-redis/pubSub.test.ts:30:5
      at Object.<anonymous> (src/kafka-redis/pubSub.test.ts:4:1)

  ● PubSub › runWorker processes incoming messages and stores them in Redis

    thrown: "Exceeded timeout of 30000 ms for a testfalse.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      48 |     });
      49 |
    > 50 |     test("runWorker processes incoming messages and stores them in Redis", async () => {
         |     ^
      51 |         // arrange
      52 |         const partitionKey = `testKey3-${uuidv4()}`;
      53 |         const message = "testMessage";

      at src/kafka-redis/pubSub.test.ts:50:5
      at Object.<anonymous> (src/kafka-redis/pubSub.test.ts:4:1)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 3 total
Snapshots:   0 total
Time:        103.56 s
Ran all test suites matching /pubSub.test.ts/i.
npm notice 
npm notice New major version of npm available! 8.15.0 -> 9.6.5
npm notice Changelog: https://github.com/npm/cli/releases/tag/v9.6.5
npm notice Run npm install -g npm@9.6.5 to update!
npm notice 
root@053ee0e05889:~/app/omni/src/kafka-redis# 

