# RPK CLI Commands and Usage

RPK is the command-line interface for Redpanda, providing comprehensive cluster management and data operations.

## Installation

### Standalone RPK Installation
```bash
# Linux
curl -LO https://github.com/redpanda-data/redpanda/releases/latest/download/rpk-linux-amd64.zip
unzip rpk-linux-amd64.zip
sudo mv rpk /usr/local/bin/

# macOS
brew install redpanda-data/tap/redpanda
```

## Cluster Management

### Cluster Information
```bash
# Show cluster information
rpk cluster info

# Show cluster health
rpk cluster health

# Show cluster configuration
rpk cluster config

# Show cluster metadata
rpk cluster metadata
```

### Node Management
```bash
# List cluster nodes
rpk cluster nodes

# Show node configuration
rpk cluster config get

# Set node configuration
rpk cluster config set <key> <value>
```

## Topic Operations

### Topic Management
```bash
# Create topic
rpk topic create <topic-name>

# Create topic with specific configuration
rpk topic create <topic-name> \
  --partitions 12 \
  --replicas 3 \
  --config cleanup.policy=compact

# List topics
rpk topic list

# Describe topic
rpk topic describe <topic-name>

# Delete topic
rpk topic delete <topic-name>
```

### Topic Configuration
```bash
# Set topic configuration
rpk topic alter-config <topic-name> --set cleanup.policy=compact

# Get topic configuration
rpk topic describe <topic-name> --print-configs

# Add partitions
rpk topic add-partitions <topic-name> --partitions 20
```

## Producer and Consumer Operations

### Producing Messages
```bash
# Produce messages interactively
rpk topic produce <topic-name>

# Produce from file
rpk topic produce <topic-name> --file messages.txt

# Produce with key
rpk topic produce <topic-name> --key my-key

# Produce with headers
rpk topic produce <topic-name> --header key:value

# Produce with compression
rpk topic produce <topic-name> --compression gzip
```

### Consuming Messages
```bash
# Consume messages
rpk topic consume <topic-name>

# Consume from beginning
rpk topic consume <topic-name> --from-beginning

# Consume specific number of messages
rpk topic consume <topic-name> --num 100

# Consume with group
rpk topic consume <topic-name> --group my-group

# Consume with output format
rpk topic consume <topic-name> --format json
```

## Consumer Group Management

### Group Operations
```bash
# List consumer groups
rpk group list

# Describe consumer group
rpk group describe <group-name>

# Delete consumer group
rpk group delete <group-name>

# Reset consumer group offsets
rpk group seek <group-name> --to-beginning
rpk group seek <group-name> --to-end
rpk group seek <group-name> --to <offset>
```

## ACL Management

### Access Control Lists
```bash
# Create ACL
rpk acl create \
  --allow-principal User:alice \
  --operation read \
  --topic my-topic

# List ACLs
rpk acl list

# Delete ACL
rpk acl delete \
  --allow-principal User:alice \
  --operation read \
  --topic my-topic
```

## Schema Registry Operations

### Schema Management
```bash
# List schemas
rpk registry schema list

# Get schema
rpk registry schema get <subject>

# Create schema
rpk registry schema create <subject> --schema @schema.json

# Delete schema
rpk registry schema delete <subject>
```

## Container Operations

### Local Development
```bash
# Start local cluster
rpk container start

# Stop local cluster
rpk container stop

# Purge local data
rpk container purge

# Show container status
rpk container status
```

## Configuration and Profiles

### Profile Management
```bash
# Create profile
rpk profile create <profile-name> \
  --brokers localhost:9092

# List profiles
rpk profile list

# Use profile
rpk profile use <profile-name>

# Show current profile
rpk profile current
```

### Configuration
```bash
# Show configuration
rpk profile print

# Set configuration
rpk profile set brokers localhost:9092
rpk profile set sasl.mechanism SCRAM-SHA-256
rpk profile set sasl.username myuser
rpk profile set sasl.password mypassword
```

## Monitoring and Debugging

### Metrics and Monitoring
```bash
# Show topic metrics
rpk topic describe <topic-name> --print-usage

# Show partition information
rpk topic describe <topic-name> --print-partitions

# Show consumer lag
rpk group describe <group-name> --print-lag
```

### Debugging
```bash
# Debug producer
rpk topic produce <topic-name> --verbose

# Debug consumer
rpk topic consume <topic-name> --verbose

# Show detailed cluster info
rpk cluster info --detailed
```

## Security Configuration

### SASL/SCRAM Authentication
```bash
# Configure SASL
rpk profile set sasl.mechanism SCRAM-SHA-256
rpk profile set sasl.username myuser
rpk profile set sasl.password mypassword
```

### TLS Configuration
```bash
# Configure TLS
rpk profile set tls.enabled true
rpk profile set tls.ca-cert-file ca.crt
rpk profile set tls.cert-file client.crt
rpk profile set tls.key-file client.key
```

## Common Use Cases

### Development Workflow
```bash
# 1. Start local cluster
rpk container start

# 2. Create topic
rpk topic create test-topic --partitions 3

# 3. Produce test data
echo "test message" | rpk topic produce test-topic

# 4. Consume messages
rpk topic consume test-topic --from-beginning

# 5. Clean up
rpk container stop && rpk container purge
```

### Production Monitoring
```bash
# Check cluster health
rpk cluster health

# Monitor consumer lag
rpk group describe my-app-group --print-lag

# Check topic throughput
rpk topic describe high-volume-topic --print-usage
```
description:
globs:
alwaysApply: false
---
